builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
echo hello terminal
pwd
ls --color=auto
cd freeCodeCamp
pwd
ls --color=auto
cd test
pwd
ls --color=auto
pwd
cd ...
cd ..
ls --color=auto
more package.json
clear
ls --color=auto
cd node_modules
ls --color=auto
ls --color=auto -l
cd has
ls --color=auto
more readme.md
more README.md
ls --color=auto
more LICENSE-MIT
clear
ls --color=auto
cd src
pwd
ls --color=auto
more index.js
cd ..
cd node_modules
ls --color=auto
cd ..
cd ../..
ls --color=auto
clear
mkdir website
ls --color=auto
cd website
ls --color=auto
echo hello website
touch index.html
touch styles.css
ls --color=auto
touch index.js
touch .gitignore
ls --color=auto
ls --color=auto --help
ls --color=auto -a
cd .
touch background.jpg
touch header.png
touch footer.jpeg
ls --color=auto
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto
touch CodeAlly.svg
ls --color=auto
cd freeCodeCamp
ls --color=auto
cd test
ls --color=auto
cd ../..
ls --color=auto
freeCodeCamp
pwd
ls --color=auto
cd freeCodeCamp/
ls --color=auto
ls --color=auto -a
cd test
ls --color=auto
cd ../..
pwd
cd ..
ls --color=auto
ls --color=auto -a
pwd
ls --color=auto
cd project/
ls --color=auto
cd freeCodeCamp/
cd ..
clear
mkdir website
cd website/
touch index.html
touch styles.css
touch index.js
touch .gitignore
ls --color=auto -a
touch background.jpg
touch header.png
touch footer.jpeg
touch roboto.font
touch lato.font
touch menlo.font
ls --color=auto -a
clear
touch CodeAlly.svg
touch CodeRoud.svg
touch CodeRoad.svg
touch freeCodeCamp.svg
ls --color=auto
mkdir images
__vsc_prompt_cmd_original
ls --color=auto
cp background.jpg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm CodeRoud.svg
rm background.jpg
ls --color=auto
cp header.png images/
cp footer.jpeg images/
cd images/
ls --color=auto
cd ..
ls --color=auto
rm header.png
rm footer.jpeg
ls --color=auto
mv roboto.font roboto.woff
ls --color=auto
mv lato.font lato.woff
mv lato.woff lato.ttf
mv menlo.font menlo.otf
ls --color=auto
mkdit fonts
mkdir fonts
ls --color=auto
__vsc_prompt_cmd_original
mv roboto.woff fonts/
find
mv lato.ttf fonts/
mv menlo.otf fonts
find
mkdir client
mkdir client/src
mv index.html client/src/
find
mv index.js client/src/
mv styles.css client/src/
find
find client/
find --help
find -name index.html
find -name styles.css
find -name src
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
ls --color=auto
find
ls --color=auto
find website
cd website
find
cd ..
ls --color=auto -a
git add .
git commit -m "first commit"
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
git push origin master
git push
ls --color=auto
cd website/
ls --color=auto
cd client
mkdir assets
cd assets
mkdir images
cd images
cp ../background.jpg
cp ../background.jpg .
cd ..
ls --color=auto
cd ..
ls --color=auto
find
cd ..
ls --color=auto
find background.jpg
cd ..
ls --color=auto
find background.jpg
cd wibsite
cd website
ls --color=auto
cd images
ls --color=auto
ls --color=auto
cd ..
ls --color=auto
find
mv images/background.jpg client/assets/images/
find
mv client/assets/images/background.jpg images
find
touch ./client/assets/images/background.jpg
cd ..
cd website/
cd client/assets/images/
cd ../../..
cd images
ls --color=auto
mv header.png ..
ls --color=auto
__vsc_prompt_cmd_original
cd ..
ls --color=auto
find -name images
mv header.png client/assets/images/
find -name header.png
find -name footer.jpeg
mv images/footer.jpeg client/assets/images/
find
rmdir images/
rm images/background.jpg
rmdir images/
rm images/background.jpg
ls --color=auto
rm images/background.jpg
clear
mkdir images
touch images/background.jpg
rm images/background.jpg
rmdir images
ls --color=auto
find
mkdir client/assets/icons
mv CodeAlly.svg client/assets/icons/
__vsc_prompt_cmd_original
find
mv CodeRoad.svg client/assets/icons/
mv freeCodeCamp.svg client/assets/icons/
find
find
cd ..
ls --color=auto
cd website/
find
find
clear
find
git commit
git add .
git commit -m "before reset"
cd /workspace/project/website/
find
find
find
find
find
find
find
ls --color=auto -a
cd ..
ls --color=auto
cd website/
git remote set-url origin https://github.com/HarrietWaninge/bashproject.git
git branch -M main
git push -u origin main
find
find
find
ls --color=auto
find
mv freeCodeCamp.svg client/assets/icons/
find
rm CodeAlly.svg
rm CodeRoad.svg
ls --color=auto
find
find
git add .
git commit -m "wwhatgit commit -m "before reset" kd dkjf exit "
git push
find
find
find
cd ..
ls --color=auto
cd freeCodeCamp/
npm run programmatic-test
cd ..
ls --color=auto
cd website/
ls --color=auto
find
rm CodeAlly.svg
rm CodeRoad.svg
mv freeCodeCamp.svg client/assets/icons
mkdir client/assets/fonts
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
__vsc_regex_environment="^CYGWIN*|MINGW*|MSYS*"
[[ "$(uname -s)" =~ $__vsc_regex_environment ]]
__vsc_is_windows=0
__vsc_regex_histcontrol=".*(erasedups|ignoreboth|ignoredups).*"
[[ "$HISTCONTROL" =~ $__vsc_regex_histcontrol ]]
__vsc_history_verify=1
builtin unset __vsc_regex_environment
builtin unset __vsc_regex_histcontrol
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
__vsc_stable="$VSCODE_STABLE"
unset VSCODE_STABLE
[ "$__vsc_stable" = "0" ]
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
find
ls --color=auto
cd website/
find
touch fonts/roboto-bold.woff
rm fonts/roboto-bold.woff
touch client/assets/fonts/roboto-bold.woff
touch client/assets/fonts/roboto-light.woff
find client/assets/fonts
touch client/assets/fonts/lato-bold.ttf
touch client/assets/fonts/lato-light.ttf
find
__vsc_prompt_cmd_original
rm --help
rmdir fonts/ -r
rm fonts/ -r
ls --color=auto
touch package.json
touch server.js
touch README.md
ls --color=auto
echo Yay!
echo I finished the boilerplate!
echo One more thing...
echo one more thing...
echo I made this boilerplate README.md
echo I made this boilerplate >> README.md
